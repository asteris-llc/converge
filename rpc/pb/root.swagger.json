{
  "swagger": "2.0",
  "info": {
    "title": "root.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/machine/apply": {
      "post": {
        "summary": "Apply a module given by the location",
        "operationId": "Apply",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/pbStatusResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoadRequest"
            }
          }
        ],
        "tags": [
          "Executor"
        ]
      }
    },
    "/api/v1/machine/graph": {
      "post": {
        "operationId": "Graph",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/pbGraphComponent"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoadRequest"
            }
          }
        ],
        "tags": [
          "Grapher"
        ]
      }
    },
    "/api/v1/machine/healthcheck": {
      "post": {
        "summary": "Healthcheck a module given by the location",
        "operationId": "HealthCheck",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/pbStatusResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoadRequest"
            }
          }
        ],
        "tags": [
          "Executor"
        ]
      }
    },
    "/api/v1/machine/plan": {
      "post": {
        "summary": "Plan out the execution of a module given by the location",
        "operationId": "Plan",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/pbStatusResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoadRequest"
            }
          }
        ],
        "tags": [
          "Executor"
        ]
      }
    },
    "/api/v1/resources/binary": {
      "get": {
        "summary": "GetBinary returns the converge binary itself",
        "operationId": "GetBinary",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/pbContentResponse"
            }
          }
        },
        "tags": [
          "ResourceHost"
        ]
      }
    },
    "/api/v1/resources/modules/{location}": {
      "get": {
        "summary": "GetModule gets the content of a module at the given path",
        "operationId": "GetModule",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/pbContentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ResourceHost"
        ]
      }
    }
  },
  "definitions": {
    "GraphComponentEdge": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "string"
          }
        },
        "dest": {
          "type": "string",
          "format": "string"
        },
        "source": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "GraphComponentVertex": {
      "type": "object",
      "properties": {
        "details": {
          "type": "string",
          "format": "byte",
          "title": "detailed fields of this node, serialized as JSON"
        },
        "id": {
          "type": "string",
          "format": "string"
        },
        "kind": {
          "type": "string",
          "format": "string",
          "title": "the kind of node, specified as the type used to create a node of this\ntype in the Converge DSL"
        }
      }
    },
    "StatusResponseDetails": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/pbDiffResponse"
          }
        },
        "error": {
          "type": "string",
          "format": "string"
        },
        "hasChanges": {
          "type": "boolean",
          "format": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "string"
          }
        },
        "warning": {
          "type": "string",
          "format": "string"
        }
      },
      "title": "the informational message, if present"
    },
    "StatusResponseMeta": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "StatusResponseRun": {
      "type": "string",
      "enum": [
        "UNSPECIFIED_RUN",
        "STARTED",
        "FINISHED"
      ],
      "default": "UNSPECIFIED_RUN",
      "title": "when is this status response being sent?"
    },
    "StatusResponseStage": {
      "type": "string",
      "enum": [
        "UNSPECIFIED_STAGE",
        "PLAN",
        "APPLY"
      ],
      "default": "UNSPECIFIED_STAGE",
      "title": "the stage from which this status response is being sent"
    },
    "pbContentResponse": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "pbDiffResponse": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "boolean",
          "format": "boolean"
        },
        "current": {
          "type": "string",
          "format": "string"
        },
        "original": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "pbGraphComponent": {
      "type": "object",
      "properties": {
        "edge": {
          "$ref": "#/definitions/GraphComponentEdge"
        },
        "vertex": {
          "$ref": "#/definitions/GraphComponentVertex"
        }
      }
    },
    "pbLoadRequest": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "format": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "string"
          }
        },
        "verify": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "pbStatusResponse": {
      "type": "object",
      "properties": {
        "details": {
          "$ref": "#/definitions/StatusResponseDetails"
        },
        "id": {
          "type": "string",
          "format": "string",
          "title": "TODO: preserve for compat but will stop working in 0.4.0. This has moved to\nmeta.id"
        },
        "meta": {
          "$ref": "#/definitions/StatusResponseMeta"
        },
        "run": {
          "$ref": "#/definitions/StatusResponseRun"
        },
        "stage": {
          "$ref": "#/definitions/StatusResponseStage"
        }
      }
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    }
  }
}
